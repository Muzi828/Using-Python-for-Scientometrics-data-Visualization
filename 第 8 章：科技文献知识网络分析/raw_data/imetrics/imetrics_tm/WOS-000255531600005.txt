Current model-driven Web engineering approaches provide methods and compilers for the effective design and development of Web applications. However, these proposals also have some limitations, especially when it comes to exchanging model specifications or adding further concerns such as architectural styles, technology independence, or distribution. One solution to these issues is based on the possibility of making Web proposals interoperate, being able to complement each other, and to exchange models between their tools. We analyze how a common reference model shared by Web engineering proposals can be effectively used to achieve the desired interoperability. We also examine how such a common reference model can be used to combine models coming from different proposals, and discuss the problems that can occur when integrating these separate models. Finally, we show how high-level model transformations allow to efficiently solving these problems.